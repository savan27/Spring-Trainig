Task : Spring Core(5.2.5)

===============

Date : 15/04/2020

	-  Start reading Spring Core Documentation  
	-  What is Spring Framework
	-  Advantages of Spring framework
	-  Over view about working of framework
	-  Basic understanding of IOC container and working
	-  Conceptual knowledge about Dependency Injection 

Reference :

	- Spring offical Documentation (5.2.5)
	- Durgasoft Spring Tutorial Introduction-parts (youtube)

===============	

Date : 16/04/2020

	- Configuring metadata
	- Instantiating container
	- Using the container
	- Naiming Bean
	- Aliasing a Bean
	- Instantiating Bean 
		1. With Constructor
		2. With Static Factory Method
		3. With Instance Fctory Method
	- Dependency Injection
		1. Constructor-based
		2. Setter-based

Reference :

	- Spring offical Documentation (5.2.5)

===============	

Date : 17/04/2020

	- Bean Life Cycle
		- Initialisation Callback
		- Destruction Callback
		- Post Processors
	- Dependency Configuration
		- primitive and String-based values
		- Reference Bean (Collaborators)
		- Inner Bean
		- Collection
		- Collection Merging(inheritance)
		- Null and Empty String Values
		- XML Shortcuts with the p-namespace
		- XML Shortcuts with the c-namespace
	- Depends-On
	- Lazy-initialised Beans
	- Autowiring Collaborators
		- none
		- ByName
		- ByType
		- ByConstructor

Reference :

	- Spring offical Documentation (5.2.5)
	- javaTpoint
	- tutorialsPoint

===============	

Date : 20/04/2020

	- Method Injection
		- Lookup method 
		- Method replacement
		- ApplicationContexAware
	- Bean Scopes
		- Singleton 
		- Prototype
		- Request
		- Session
		- Global
	- Customising the nature of bean
	- Bean Definition inheritance
	- Container Extension Points
	- Annotation-based Container Configuration
		- @Required 
		- @Autowired 
		- @Qualifire 
		- JSR-250 Annotations
			- @PostConstruct
			- @PreDestroy
			- @Resource

Reference :

	- Spring offical Documentation (5.2.5)
	- http://www.wideskills.com/spring/method-injection-in-spring
	- tutorialsPoint

===============

Date : 21/04/2020

	- configuration File 
	- Property File
	- Classpath scanning and Managed Components
		- Stereotype Annotations
			- @component
			- @controller
			- @service
			- @Repository
		- Automatically Detaching class and register Bean Definition
		- filter to customise scanning
		- naming auto-detected components
		- providing qualifier metadata with annotation
	- Using JSR-330 Standard Annotation 
		- Dependency injection using @inject,@named and @managedbean
	- Difference JSR 330 vs JSR 250
	- Java base Container Configuration
		- AnnotationConfigApplicationContext
		- @bean
			- declaration
			- life-cycle callback
			- scope
			- customised name
			- aliasing
			- Description
		- @configuration
		- @componentScan
	- Perform practical based on theory


Reference :

	- Spring offical Documentation (5.2.5)
	
===============

Date : 22/04/2020
	
	- Enviroment Abstraction
		- Bean Defination profiles
			- @profile
			- setActiveProfile
		- Property source Abstraction
		- @propertySource
	- Registering a LoadTimeWeare
	- additional capabilities of the applicationContext
	- The BeanFactory of ApplicationContext
	- Perform practical based on theoryn

Reference :

	- Spring offical Documentation (5.2.5)
	
===============

Date : 23/04/2020

	- Learning Resource interface
	- Built in resource implementation
		- uri
		- classpath
		- file
		- InputStream
		- ByteArrayResource
		- ServletContextResource
	- Learning Resource Loader 
		- getResource()
	- ResourceLoaderAware interface
		- setResourceLoader()
	- Resource dependency		
	- Application Contexts and resource paths
		- ClassPathXmlApplicationContext
		- FileSystemXmlApplicationContext
	- Wildcards in Application Context Constructor Resource path
	- Perform practical based on theory

Reference :

	- Spring offical Documentation (5.2.5)
	
===============		

Date : 24/04/2020

	- Spring STACK implimentation program
	- Spring Validator interface
	- Bean Manipulation and BeanWrapper
	- setting ans getting basic nested properties
	- Perform practical based on theory

Reference :

	- Spring offical Documentation (5.2.5)
	
===============

Date : 27/04/2020

	- Start learning Spring MVC
	- Reffering some Spring Hibernate Project For UnderStanding
	- Understand the folder structure 
	- Create simple demo of MVC structure 
	- learn and impliment Dispatecher Servlet 
	- learn and used annotation 
		- @RequestMapping
		- @ResponseBody	
		- @Controller

Reference :

	-  youtube tutorial videos(selenium Express)
	
===============

Date : 28/04/2020

	- Understand and use view resolver
	- Create project structure
	- Demo using hibernate and Spring MVC
	- change in hiernate configuration (in progress)
	- perform practices based on theory 

Reference :

	-  youtube tutorial videos(selenium Express)
	
===============

Date : 29/04/2020

	- Changes in configuration according the guidance
	- learning generic pattern 
	- Implementation based on theory 

Reference :

	- https://www.baeldung.com/hibernate-5-spring	(Hibernate Configuration)
	- http://websystique.com/spring/spring4-hibernate4-mysql-maven-integration-example-using-annotations/	(CRUD Demo)
	
===============

Date : 30/04/2020

	- Solved errors in generics implementation
	- learning template freemarker template engine
	- configure the freemarker using java class
	- create the .ftl files and perform CRUD
	- Implementation based on theory 

Reference :

	- https://freemarker.apache.org/ 	(freemarker)
	
===============

Date : 01/05/2020

	- start coding for project
	- working on login-register functionality
	- create login and register page with url mapping
	- create entity mapping using hibernate
	- manage static data through code for association
	- manage front end validation in .ftl files
	- manage multiple addresses in front-end
	- working on storing image at register time 

Reference :

	- 
	
===============
